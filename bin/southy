#!/usr/bin/env ruby

$LOAD_PATH << File.dirname(__FILE__) + "/../lib" if $0 == __FILE__
require 'optparse'
require 'southy'

operations = %w(init run rundebug reconfirm checkin checkout add remove delete list history)

config = { verbose: false }
option_parser = OptionParser.new do |opts|
  opts.banner = "Southy #{Southy::VERSION}, auto check-in for Southwest flights\nUsage: #{__FILE__} [command] [options]"

  opts.on("-v", "--verbose", "Be verbose") do
    config[:verbose] = true
  end

  opts.separator <<-EOS

Supported commands:

 init <personal_info>                Initialize Southy with your personal info
 list                                Display upcoming flight check-ins
 history                             Display past flight check-ins
 add <conf> [<personal_info>]        Add a new check-in
 remove <conf>                       Remove a check-in (synonym: delete)
 reconfirm [<conf>]                  Reconfirm flights (picks up any ticketing changes)
 checkin [<conf>]                    Check-in to all available flights
 run                                 Run Southy in the foreground (kill with ctrl-c)

<personal_info> is in the form of: <first_name> <last_name> <email>
where email is always optional.  Southy will email your boarding pass to you if it can.
EOS
end
option_parser.parse!

op = ARGV.shift
if operations.include?(op)
  begin
    cli = Southy::CLI.new config
    exit ( cli.send(op.to_sym, ARGV) ? 0 : 1 )
  rescue SystemExit => e
    exit e.status
  rescue SignalException => e
    exit 128 + e.signo
  rescue Exception => e
    puts "Uh oh, I didn't expect this:"
    puts e.message
    puts e.backtrace.join("\n")
    exit 3
  end
else
  puts option_parser.help
  exit 4
end
